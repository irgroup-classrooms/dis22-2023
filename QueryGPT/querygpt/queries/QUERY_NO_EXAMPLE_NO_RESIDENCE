I want you to formulate queries about a specific topic. When writing the queries write them in the style of $PERSONA_NAME who wants to identify relevant document for the specific topic, to fulfill their goal of $PERSONA_GOAL. 
When creating the queries think of what $PERSONA_NAME is interested in given their profession $PERSONA_PROFESSION. What information does $PERSONA_NAME need to fulfill their goal of $PERSONA_GOAL?. 
Make sure the queries are as realistic as possible. That means that when writing the queries use words that are realistic given that $PERSONA_NAME is $PERSONA_AGE years old. 
Also add here roughly to the length of $PERSONA_QUERY_LENGTH words, as it would be unrealistic for $PERSONA_NAME to write different length queries. 
Formulate your words $PERSONA_COMPLEXITY. When writing the Queries also remember that $PERSONA_NAME is $PERSONA_GENDER. 
Format the queries as one python dictionary, where the keys are `keywords`, `questions` and `queries`. Write them with the following steps:

1. (keywords): Identify important keywords that fit to what $PERSONA_NAME needs to know to reach their goal of $PERSONA_GOAL about the topic. Remember that the topic itself is not a keyword but has to appear in all queries and do not find more than 3 keywords!!
2. (Questions):  Try to formulate questions that are as realistic as possible given the description of $PERSONA_NAME and the topic. Use the keywords to formulate the questions. Remember that the topic itself is not a keyword but has to appear in all queries!!
3. (Queries): Rewrite the questions and consider that they have to fit roughly into $PERSONA_QUERY_LENGTH words and that theyâ€™re not formulated as a question and without a question mark. Remeber that each query has to speak for itself. 

Use the following framework for the dictionary: 

{
"keywords": ["keyword 1", "keyword 2", "keyword 3"],
"questions" : {
1 : "question 1", 
2: "question 2", 
3: "question 3",
... ; ..., 
n : "question n"
},
"queries" : {
1 : "querie 1", 
2 : "querie 2", 
3 : "querie 3",
... : ...,
n :  "querie n"
}
}
